#!/bin/bash

# Function to check if a port is in use
port_in_use() {
    lsof -i :$1 >/dev/null
}

# Function to find the next available port
next_available_port() {
    local port=$1
    while port_in_use $port; do
        ((port++))
    done
    echo $port
}

# Run a single odoo test suite on a given addon and port
run_test() {
    local addon=$1
    local port
    port=$(next_available_port 8069)
    local dbname="test_$addon"
    local LOGDIR=$2
    echo "testing $addon on port $port"
    logfile=$LOGDIR/$( date "+%Y-%m-%d_%H:%M:%S")"-$addon.log"
    # Run the tests and if everything passed, delete the logfile
    psql odoo -c "drop database if exists $dbname;"; /opt/odoo/odoo-bin -c /etc/odoo/odoo.conf -d "$dbname" --test-enable -i "$addon" \
         --stop-after-init --logfile "$logfile" -p "$port"
    if [ -f "$logfile" ]; then
        echo "Test failures for $addon. Log file at $logfile"
    else
        echo "Done testing $addon. No failures reported. Log file deleted."
    fi
    (( running_tests-=1 ))
}

# Initialize extra requirements found in mnt/extra-requirements
init_extra_requirements

source /opt/odoo/venv/bin/activate
WORKDIR="/mnt/extra-addons"
ADDONS_LIST=$(manifestoo --select-addons-dir="$WORKDIR" --odoo-series=17.0 list --separator=,)
IFS=',' read -r -a addons <<< "$ADDONS_LIST"
LOGDIR="/mnt/logs"

# Keep track of which tests are running
while (( ${#addons[@]} > 0 ));
do
    running_tests=$(jobs -p | wc -l)
    # Run at most 3 tests at a time, otherwise wait for one to finish
    if (( running_tests < 3 )); then
        # Pop the first addon from the queue
        sleep 3
        run_test "${addons[0]}" "$LOGDIR" &
        addons=("${addons[@]:1}")
    else
        sleep 10
    fi

done
deactivate
